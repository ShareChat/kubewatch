apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubewatch
  namespace: default
  labels:
    app.kubernetes.io/name: kubewatch
    helm.sh/chart: kubewatch-3.3.10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    entity: ${entity}
    environment: prod
    pod: devops
    service: kubewatch
automountServiceAccountToken: true
---
# Source: kubewatch/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-kubewatch-config
  namespace: default
  labels:
    app.kubernetes.io/name: kubewatch
    helm.sh/chart: kubewatch-3.3.10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    entity: ${entity}
    environment: prod
    pod: devops
    service: kubewatch
data:
  .kubewatch.yaml: |
    handler:
      webhook:
        enabled: true
        url: http://chronokeeper-agent.chronokeeper.svc.cluster.local:80/v1
    resource:
      clusterrole: true
      clusterrolebinding: true
      configmap: false
      daemonset: true
      deployment: true
      event: false
      ingress: true
      job: true
      namespace: true
      persistentvolume: false
      pod: false
      replicaset: false
      replicationcontroller: false
      secret: true
      serviceaccount: true
      services: true
    namespace: ""
---
# Source: kubewatch/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubewatch
  namespace: default
  labels:
    app.kubernetes.io/name: kubewatch
    helm.sh/chart: kubewatch-3.3.10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    entity: ${entity}
    environment: prod
    pod: devops
    service: kubewatch
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - daemonsets
      - deployments
      - events
      - namespaces
      - nodes
      - persistentvolumes
      - pods
      - replicasets
      - replicationcontrollers
      - secrets
      - services
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - deployments/scale
      - replicasets
      - replicasets/scale
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling 
    resources:
      - horizontalpodautoscalers
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - daemonsets
      - deployments
      - deployments/scale
      - ingresses
      - replicasets
      - replicasets/scale
      - replicationcontrollers/scale
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - watch
---
# Source: kubewatch/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubewatch
  namespace: default
  labels:
    app.kubernetes.io/name: kubewatch
    helm.sh/chart: kubewatch-3.3.10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    entity: ${entity}
    environment: prod
    pod: devops
    service: kubewatch
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kubewatch
subjects:
  - kind: ServiceAccount
    name: release-name-kubewatch
    namespace: default
---
# Source: kubewatch/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubewatch
  namespace: default
  labels:
    app.kubernetes.io/name: kubewatch
    helm.sh/chart: kubewatch-3.3.10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    entity: ${entity}
    environment: prod
    pod: devops
    service: kubewatch
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kubewatch
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config-map: 7e39f2ff30556e74e4a796e2ef41fec3994a2b2d39b8adcebe081c32d21d8376
      labels:
        app.kubernetes.io/name: kubewatch
        helm.sh/chart: kubewatch-3.3.10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: kubewatch
        cloud: gcp
        component: service
        entity: ${entity}
        environment: prod
        id: kubewatch
        platform: horizontal
        pod: devops
        service: kubewatch
        team: engineering
        version: v1
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: kubewatch
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      nodeSelector:
        devops-internal: "true"
      restartPolicy: Always
      serviceAccountName: release-name-kubewatch
      containers:
        - name: kubewatch
          image: asia.gcr.io/sharechat-production/sharechat/kubewatch:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 2
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: configuration
              mountPath: /opt/bitnami/kubewatch/.kubewatch.yaml
              subPath: .kubewatch.yaml
      volumes:
        - name: configuration
          configMap:
            name: release-name-kubewatch-config
